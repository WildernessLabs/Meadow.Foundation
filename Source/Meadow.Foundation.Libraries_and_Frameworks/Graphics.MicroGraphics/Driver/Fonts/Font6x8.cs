namespace Meadow.Foundation.Graphics
{
    /// <summary>
    /// Represents a 6x8 bitmap font
    /// </summary>
    public class Font6x8 : IFont
    {
        /// <summary>
        /// Width of a character in the font.
        /// </summary>
        public int Width => 6;

        /// <summary>
        /// Height of a character in the font.
        /// </summary>
        public int Height => 8;

        /// <summary>
        /// Font table containing the binary representation of ASCII characters.
        /// </summary>
        private static readonly byte[][] _fontTable =
        {
            new byte[] {0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //0020( )
            new byte[] {0x04, 0x41, 0x10, 0x04, 0x40, 0x00}, //0021(!)
            new byte[] {0x8A, 0xA2, 0x00, 0x00, 0x00, 0x00}, //0022(")
            new byte[] {0x80, 0xF2, 0x29, 0x9F, 0x02, 0x00}, //0023(#)
            new byte[] {0x84, 0x57, 0x38, 0xD4, 0x43, 0x00}, //0024($)
            new byte[] {0x42, 0x29, 0x21, 0x84, 0x94, 0x42}, //0025(%)
            new byte[] {0x42, 0x51, 0x08, 0x55, 0x62, 0x01}, //0026(&)
            new byte[] {0x82, 0x20, 0x00, 0x00, 0x00, 0x00}, //0027(')
            new byte[] {0x08, 0x21, 0x08, 0x02, 0x81, 0x00}, //0028(()
            new byte[] {0x02, 0x81, 0x20, 0x08, 0x21, 0x00}, //0029())
            new byte[] {0x00, 0xA0, 0x10, 0x0A, 0x00, 0x00}, //002A(*)
            new byte[] {0x00, 0x41, 0x7C, 0x04, 0x01, 0x00}, //002B(+)
            new byte[] {0x00, 0x00, 0x00, 0x80, 0x41, 0x08}, //002C(,)
            new byte[] {0x00, 0x00, 0x7C, 0x00, 0x00, 0x00}, //002D(-)
            new byte[] {0x00, 0x00, 0x00, 0x80, 0x61, 0x00}, //002E(.)
            new byte[] {0x00, 0x84, 0x10, 0x42, 0x00, 0x00}, //002F(/)
            new byte[] {0x4E, 0x94, 0x55, 0x53, 0xE4, 0x00}, //0030(0)
            new byte[] {0x84, 0x41, 0x10, 0x04, 0x41, 0x00}, //0031(1)
            new byte[] {0x4E, 0x04, 0x21, 0x84, 0xF0, 0x01}, //0032(2)
            new byte[] {0x4E, 0x04, 0x39, 0x50, 0xE4, 0x00}, //0033(3)
            new byte[] {0x48, 0x92, 0x24, 0x1F, 0x82, 0x00}, //0034(4)
            new byte[] {0x5F, 0x10, 0x38, 0x50, 0xE4, 0x00}, //0035(5)
            new byte[] {0x4E, 0x14, 0x3C, 0x51, 0xE4, 0x00}, //0036(6)
            new byte[] {0x1F, 0x04, 0x41, 0x10, 0x04, 0x01}, //0037(7)
            new byte[] {0x4E, 0x14, 0x39, 0x51, 0xE4, 0x00}, //0038(8)
            new byte[] {0x4E, 0x14, 0x79, 0x50, 0xE4, 0x00}, //0039(9)
            new byte[] {0x80, 0x61, 0x00, 0x80, 0x61, 0x00}, //003A(:)
            new byte[] {0x80, 0x61, 0x00, 0x80, 0x41, 0x08}, //003B(;)
            new byte[] {0x08, 0x21, 0x04, 0x02, 0x81, 0x00}, //003C(<)
            new byte[] {0x00, 0xF0, 0x03, 0x3F, 0x00, 0x00}, //003D(=)
            new byte[] {0x02, 0x81, 0x40, 0x08, 0x21, 0x00}, //003E(>)
            new byte[] {0x4E, 0x04, 0x31, 0x04, 0x40, 0x00}, //003F(?)
            new byte[] {0x4E, 0x14, 0x35, 0x41, 0xE4, 0x00}, //0040(@)
            new byte[] {0x4E, 0x14, 0x7D, 0x51, 0x14, 0x01}, //0041(A)
            new byte[] {0x4F, 0x14, 0x3D, 0x51, 0xF4, 0x00}, //0042(B)
            new byte[] {0x4E, 0x14, 0x04, 0x41, 0xE4, 0x00}, //0043(C)
            new byte[] {0x4F, 0x14, 0x45, 0x51, 0xF4, 0x00}, //0044(D)
            new byte[] {0x5F, 0x10, 0x1C, 0x41, 0xF0, 0x01}, //0045(E)
            new byte[] {0x5F, 0x10, 0x1C, 0x41, 0x10, 0x00}, //0046(F)
            new byte[] {0x4E, 0x14, 0x74, 0x51, 0xE4, 0x00}, //0047(G)
            new byte[] {0x51, 0x14, 0x7D, 0x51, 0x14, 0x01}, //0048(H)
            new byte[] {0x04, 0x41, 0x10, 0x04, 0x41, 0x00}, //0049(I)
            new byte[] {0x10, 0x04, 0x41, 0x50, 0xE4, 0x00}, //004A(J)
            new byte[] {0x51, 0x52, 0x0C, 0x45, 0x12, 0x01}, //004B(K)
            new byte[] {0x41, 0x10, 0x04, 0x41, 0xF0, 0x01}, //004C(L)
            new byte[] {0xD1, 0x56, 0x45, 0x51, 0x14, 0x01}, //004D(M)
            new byte[] {0x51, 0x34, 0x55, 0x59, 0x14, 0x01}, //004E(N)
            new byte[] {0x4E, 0x14, 0x45, 0x51, 0xE4, 0x00}, //004F(O)
            new byte[] {0x4F, 0x14, 0x3D, 0x41, 0x10, 0x00}, //0050(P)
            new byte[] {0x4E, 0x14, 0x45, 0x51, 0xE4, 0x40}, //0051(Q)
            new byte[] {0x4F, 0x14, 0x3D, 0x51, 0x14, 0x01}, //0052(R)
            new byte[] {0x5E, 0x10, 0x38, 0x10, 0xF4, 0x00}, //0053(S)
            new byte[] {0x1F, 0x41, 0x10, 0x04, 0x41, 0x00}, //0054(T)
            new byte[] {0x51, 0x14, 0x45, 0x51, 0xE4, 0x00}, //0055(U)
            new byte[] {0x51, 0x14, 0x45, 0x91, 0x42, 0x00}, //0056(V)
            new byte[] {0x51, 0x14, 0x55, 0x55, 0xA5, 0x00}, //0057(W)
            new byte[] {0x51, 0xA4, 0x10, 0x4A, 0x14, 0x01}, //0058(X)
            new byte[] {0x51, 0xA4, 0x10, 0x04, 0x41, 0x00}, //0059(Y)
            new byte[] {0x1F, 0x84, 0x10, 0x42, 0xF0, 0x01}, //005A(Z)
            new byte[] {0x0C, 0x41, 0x10, 0x04, 0xC1, 0x00}, //005B([)
            new byte[] {0x40, 0x20, 0x10, 0x08, 0x04, 0x00}, //005C(\)
            new byte[] {0x06, 0x41, 0x10, 0x04, 0x61, 0x00}, //005D(])
            new byte[] {0x84, 0x02, 0x00, 0x00, 0x00, 0x00}, //005E(^)
            new byte[] {0x00, 0x00, 0x00, 0x00, 0xF0, 0x01}, //005F(_)
            new byte[] {0x82, 0x40, 0x00, 0x00, 0x00, 0x00}, //0060(`)
            new byte[] {0x00, 0xE0, 0x45, 0x51, 0x66, 0x01}, //0061(a)
            new byte[] {0x41, 0xF0, 0x44, 0x51, 0xF4, 0x00}, //0062(b)
            new byte[] {0x00, 0xE0, 0x44, 0x41, 0xE4, 0x00}, //0063(c)
            new byte[] {0x10, 0xE4, 0x45, 0x51, 0xE4, 0x01}, //0064(d)
            new byte[] {0x00, 0xE0, 0x44, 0x5F, 0xE0, 0x00}, //0065(e)
            new byte[] {0x08, 0x45, 0x38, 0x04, 0x41, 0x00}, //0066(f)
            new byte[] {0x00, 0xE0, 0x44, 0x91, 0x07, 0x39}, //0067(g)
            new byte[] {0x41, 0xF0, 0x44, 0x51, 0x14, 0x01}, //0068(h)
            new byte[] {0x00, 0x01, 0x10, 0x04, 0x41, 0x00}, //0069(i)
            new byte[] {0x00, 0x02, 0x20, 0x08, 0xA2, 0x10}, //006A(j)
            new byte[] {0x41, 0x90, 0x14, 0x43, 0x91, 0x00}, //006B(k)
            new byte[] {0x04, 0x41, 0x10, 0x04, 0x41, 0x00}, //006C(l)
            new byte[] {0x00, 0xF0, 0x54, 0x55, 0x55, 0x01}, //006D(m)
            new byte[] {0x00, 0xF0, 0x44, 0x51, 0x14, 0x01}, //006E(n)
            new byte[] {0x00, 0xE0, 0x44, 0x51, 0xE4, 0x00}, //006F(o)
            new byte[] {0x00, 0xF0, 0x44, 0xD1, 0x13, 0x04}, //0070(p)
            new byte[] {0x00, 0xE0, 0x45, 0x91, 0x07, 0x41}, //0071(q)
            new byte[] {0x00, 0xD0, 0x4C, 0x41, 0x10, 0x00}, //0072(r)
            new byte[] {0x00, 0xE0, 0x05, 0x0E, 0xF4, 0x00}, //0073(s)
            new byte[] {0x04, 0xE1, 0x10, 0x04, 0x41, 0x00}, //0074(t)
            new byte[] {0x00, 0x10, 0x45, 0x51, 0xE4, 0x00}, //0075(u)
            new byte[] {0x00, 0x10, 0x45, 0x91, 0x42, 0x00}, //0076(v)
            new byte[] {0x00, 0x10, 0x45, 0x51, 0xA5, 0x00}, //0077(w)
            new byte[] {0x00, 0x10, 0x29, 0x84, 0x12, 0x01}, //0078(x)
            new byte[] {0x00, 0x10, 0x45, 0x91, 0x42, 0x10}, //0079(y)
            new byte[] {0x00, 0xF0, 0x21, 0x84, 0xF0, 0x01}, //007A(z)
            new byte[] {0x08, 0x41, 0x08, 0x04, 0x81, 0x00}, //007B({)
            new byte[] {0x04, 0x41, 0x10, 0x04, 0x41, 0x10}, //007C(|)
            new byte[] {0x02, 0x41, 0x20, 0x04, 0x21, 0x00}, //007D(})
            new byte[] {0x80, 0x52, 0x00, 0x00, 0x00, 0x00}, //007E(~)
        };

        /// <summary>
        /// Get the binary representation of an ASCII character from the
        /// font table.
        /// </summary>
        /// <param name="character">Character to look up.</param>
        /// <returns>
        /// Byte array containing the rows of pixels in the character.  Unknown byte codes will result in a space being
        /// returned.
        /// </returns>
        public byte[] this[char character]
        {
            get
            {
                var index = (byte)character;
                if ((index < 32) || (index >= 127))
                {
                    return _fontTable[0];
                }
                return _fontTable[(byte)character - 0x20];
            }
        }
    }
}